{"version":3,"sources":["webpack:///./src/components/Sections/MarkdownContent/MarkdownContent.module.scss","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./src/components/Sections/ReadNext/ReadNext.tsx","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./src/components/Sections/ReadNext/ReadNext.module.scss","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./src/components/Sections/PostCard/PostCard.tsx","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./src/templates/artwork.tsx","webpack:///./src/components/Layout/Subscribe/SubscribeFooter.tsx","webpack:///./src/templates/post.module.scss","webpack:///./node_modules/react-intl/lib/src/components/message.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./src/i18n/components/mdxLink.tsx","webpack:///./src/components/Sections/MarkdownContent/MarkdownContent.tsx","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./src/components/Sections/PostCard/PostCard.module.scss"],"names":["module","exports","MDXRenderer","require","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","ReadNext","data","relatedPosts","primaryTag","post","frontmatter","tags","useIntlHelper","formatMessage","intl","className","styles","readNext","readNextFeed","readNextCard","readNextCardHeader","to","readNextCardContent","nodes","map","key","id","href","title","readNextCardMeta","dateTime","date","formatDate","year","month","day","formatNumber","timeToRead","readNextCardFooter","values","num","totalCount","isHome","i","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","o","p","setPrototypeOf","__proto__","len","length","arr2","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","fn","minLen","n","prototype","toString","call","slice","constructor","name","test","options","PostCard","isFeatured","featured","postCard","postCardLarge","postCardImageLink","category","fields","slug","postCardImage","alt","fluid","image","childImageSharp","postCardContent","postCardContentLink","postCardHeader","postCardPrimaryTag","undefined","postCardTitle","postCardExcerpt","desc","excerpt","postCardMeta","postCardBylineContent","postCardBylineDate","Reflect","construct","sham","Proxy","Date","e","ArtworkHero","stickyRef","postFullHeader","postFullTags","ref","postFullTitle","postFullByline","ArtworkTemplate","template","kgWidthFull","body","SubscribeFooter","subscribeForm","subscribeFormTitle","subscribeFormDescription","shallowEquals","FormattedMessage","_super","apply","this","arguments","shouldComponentUpdate","nextProps","_a","otherProps","nextValues","nextOtherProps","render","_this","Consumer","textComponent","Text","_b","description","defaultMessage","_c","tagName","Component","ignoreTag","displayName","obj","value","defineProperty","enumerable","configurable","writable","isInternal","MdxLink","target","rel","components","a","MarkdownContent","postFullContent","postContent","isNativeReflectConstruct","_construct","Parent","args","Class","push","instance","Function","bind"],"mappings":"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","file":"component---src-templates-artwork-tsx-dea4e0ad0502089fbf8e.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postContent\":\"s_bS\",\"postFullContent\":\"s_bT\"};","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Link from '~src/i18n/components/Link';\nimport useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport { Post } from '~src/types/Post';\nimport PostCard from '../PostCard/PostCard';\nimport styles from './ReadNext.module.scss';\n\nexport const ReadNext = ({ data }) => {\n\tconst relatedPosts = data.relatedPosts;\n\tconst primaryTag = data.post.frontmatter.tags[0];\n\tconst { formatMessage, intl } = useIntlHelper();\n\treturn (\n\t\t<aside className={styles.readNext}>\n\t\t\t<div className={`inner `}>\n\t\t\t\t<div className={styles.readNextFeed}>\n\t\t\t\t\t<article className={styles.readNextCard}>\n\t\t\t\t\t\t<header className={styles.readNextCardHeader}>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t<span>{formatMessage('posts.moreByTag')}</span>{' '}\n\t\t\t\t\t\t\t\t<Link to={`/tags/${primaryTag}/`}>{formatMessage('tags.' + primaryTag + '.title')}</Link>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<div className={styles.readNextCardContent}>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{relatedPosts.nodes.map(post => (\n\t\t\t\t\t\t\t\t\t<li key={post.id}>\n\t\t\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"/welcome/\">{post.frontmatter.title}</a>\n\t\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t\t<div className={styles.readNextCardMeta}>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<time dateTime={post.frontmatter.date}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{intl.formatDate(post.frontmatter.date, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tyear: 'numeric',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmonth: 'short',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tday: 'numeric',\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</time>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t– {intl.formatNumber(post.timeToRead) + ' '}\n\t\t\t\t\t\t\t\t\t\t\t\t{formatMessage('posts.timeToRead')}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<footer className={styles.readNextCardFooter}>\n\t\t\t\t\t\t\t<a href={`/tags/${primaryTag}`}>\n\t\t\t\t\t\t\t\t<FormattedMessage id=\"posts.seeAll\" values={{ num: relatedPosts.totalCount }} />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</footer>\n\t\t\t\t\t</article>\n\t\t\t\t\t{relatedPosts.nodes.map((post: Post) => (\n\t\t\t\t\t\t<PostCard isHome={false} post={post} i={0} key={post.id} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</aside>\n\t);\n};\n\nexport default ReadNext;\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"readNext\":\"m_F\",\"readNextFeed\":\"m_G\",\"postCard\":\"m_h\",\"postCardPrimaryTag\":\"m_H\",\"postCardTitle\":\"m_J\",\"postCardImage\":\"m_K\",\"postCardExcerpt\":\"m_L\",\"postCardBylineContent\":\"m_M\",\"readNextCard\":\"m_N\",\"readNextCardHeader\":\"m_P\",\"readNextCardContent\":\"m_Q\",\"readNextCardMeta\":\"m_R\",\"readNextCardFooter\":\"m_S\"};","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","import * as React from 'react';\n//import { Index_posts_nodes as Post } from '~src/pages/__generated__/Index';\nimport Link from '~src/i18n/components/Link';\nimport ImgSharp from '~src/components/utils/ImgSharp/ImgSharp';\nimport styles from './PostCard.module.scss';\nimport useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport { Post } from '~src/types/Post';\n\nconst options = {\n\tyear: 'numeric',\n\tmonth: 'short',\n\tday: 'numeric',\n};\n\nconst PostCard: React.FC<{\n\tpost: Post;\n\ti?: number;\n\tisHome?: boolean;\n}> = ({ post, i, isHome }) => {\n\tconst { intl } = useIntlHelper();\n\tconst isFeatured = post.frontmatter.featured;\n\treturn (\n\t\t<article className={styles.postCard + ` ` + ((isHome && isFeatured && 0 === i % 6 && styles.postCardLarge) || ``)}>\n\t\t\t<Link className={styles.postCardImageLink} to={`/${post.frontmatter.category}/${post.fields.slug}`}>\n\t\t\t\t<ImgSharp\n\t\t\t\t\tclassName={styles.postCardImage}\n\t\t\t\t\talt={post.frontmatter.title}\n\t\t\t\t\t/* \tsizes=\"(max-width: 1000px) 400px, 700px\" */\n\t\t\t\t\tfluid={post.frontmatter.image.childImageSharp.fluid}\n\t\t\t\t/>\n\t\t\t</Link>\n\t\t\t<div className={styles.postCardContent}>\n\t\t\t\t<Link className={styles.postCardContentLink} to={`/${post.frontmatter.category}/${post.fields.slug}`}>\n\t\t\t\t\t<header className={styles.postCardHeader}>\n\t\t\t\t\t\t<div className={styles.postCardPrimaryTag}>\n\t\t\t\t\t\t\t{post.frontmatter.tags[0] !== undefined &&\n\t\t\t\t\t\t\t\tintl.formatMessage({\n\t\t\t\t\t\t\t\t\tid: `tags.${post.frontmatter.tags[0]}.title`,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h2 className={styles.postCardTitle}>{post.frontmatter.title}</h2>\n\t\t\t\t\t</header>\n\t\t\t\t\t<section className={styles.postCardExcerpt}>\n\t\t\t\t\t\t<p>{post.frontmatter.desc ? post.frontmatter.desc : post.excerpt}</p>\n\t\t\t\t\t</section>\n\t\t\t\t</Link>\n\t\t\t\t<footer className={styles.postCardMeta}>\n\t\t\t\t\t<div className={styles.postCardBylineContent}>\n\t\t\t\t\t\t<span className={styles.postCardBylineDate}>\n\t\t\t\t\t\t\t<time dateTime={post.frontmatter.date}>{intl.formatDate(post.frontmatter.date, options)}</time>{' '}\n\t\t\t\t\t\t\t{/* \t\t\t\t\t\t\t<span className=\"bull\">•</span> {intl.formatNumber(post.timeToRead)}{' '}\n\t\t\t\t\t\t\t{intl.formatMessage({ id: 'posts.timeToRead' })} */}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default PostCard;\n","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { Post as PostData } from '~src/templates/__generated__/Post';\nimport Layout from '~src/components/Layout/Layout';\nimport { MarkdownContent } from '~src/components/Sections/MarkdownContent/MarkdownContent';\nimport useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport Link from '~src/i18n/components/Link';\nimport ImgSharp from '~src/components/utils/ImgSharp/ImgSharp';\nimport Subscribe from '~src/components/Layout/Subscribe/SubscribeFooter';\nimport ReadNext from '~src/components/Sections/ReadNext/ReadNext';\nimport styles from './post.module.scss';\n\nconst ArtworkHero = ({ post, stickyRef }) => {\n\tconst { intl, formatMessage } = useIntlHelper();\n\treturn (\n\t\t<header className={styles.postFullHeader}>\n\t\t\t<div className=\"inner\">\n\t\t\t\t{post.frontmatter.tags && (\n\t\t\t\t\t<section className={styles.postFullTags}>\n\t\t\t\t\t\t<Link to={`/tags/${post.frontmatter.tags[0]}/`}>\n\t\t\t\t\t\t\t{formatMessage('tags.' + post.frontmatter.tags[0] + '.title')}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</section>\n\t\t\t\t)}\n\n\t\t\t\t<h1 ref={stickyRef} className={styles.postFullTitle}>\n\t\t\t\t\t{post.frontmatter.title}\n\t\t\t\t</h1>\n\t\t\t\t{/*\n\t\t\t\t{post.excerpt && <p className={styles.postFullCustomExcerpt}>{post.excerpt}</p>} */}\n\n\t\t\t\t<div className={styles.postFullByline}>\n\t\t\t\t\t{/* \t\t\t\t\t<section className={styles.postFullBylineContent}>\n\t\t\t\t\t\t<section className={styles.postFullBylineMeta}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<time className={styles.postFullMetaDate} dateTime={post.frontmatter.date}>\n\t\t\t\t\t\t\t\t\t{intl.formatDate(post.frontmatter.date, {\n\t\t\t\t\t\t\t\t\t\tyear: 'numeric',\n\t\t\t\t\t\t\t\t\t\tmonth: 'short',\n\t\t\t\t\t\t\t\t\t\tday: 'numeric',\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t\t<span >\n\t\t\t\t\t\t\t\t\t<span className=\"bull\">&bull;</span> {intl.formatNumber(post.timeToRead) + ' '}\n\t\t\t\t\t\t\t\t\t{formatMessage('posts.timeToRead')}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</section> */}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nconst ArtworkTemplate: React.FC<{ data: PostData }> = ({ data }) => {\n\tconst stickyRef: React.RefObject<HTMLDivElement> = React.useRef(null);\n\n\treturn (\n\t\t<>\n\t\t\t<Layout template=\"post\" stickyRef={stickyRef} data={data} readNext={<ReadNext data={data} />}>\n\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t<article className={styles.kgWidthFull}>\n\t\t\t\t\t\t<ArtworkHero post={data.post} stickyRef={stickyRef} />\n\t\t\t\t\t\t{/* \t\t\t\t\t\t<figure className={styles.postFullImage}>\n\t\t\t\t\t\t\t<ImgSharp\n\t\t\t\t\t\t\t\tclassName={styles.kgCodeCard}\n\t\t\t\t\t\t\t\tfluid={data.post.frontmatter.image.childImageSharp.fluid}\n\t\t\t\t\t\t\t\talt={data.post.frontmatter.title}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</figure> */}\n\t\t\t\t\t\t<MarkdownContent body={data.post.body} />\n\t\t\t\t\t</article>\n\t\t\t\t\t<Subscribe />\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n\nexport default ArtworkTemplate;\n\nexport const ArtworkTemplateQuery = graphql`\n\tquery ArtworkTemplate($title: String!, $locale: String!, $primaryTag: String!) {\n\t\tpost: mdx(frontmatter: { title: { eq: $title } }, fields: { locale: { eq: $locale } }) {\n\t\t\tfrontmatter {\n\t\t\t\tdate\n\t\t\t\ttitle\n\t\t\t\ttags\n\t\t\t\timage {\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfluid {\n\t\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp_tracedSVG\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\texcerpt(truncate: true, pruneLength: 200)\n\t\t\ttimeToRead\n\t\t\tbody\n\t\t}\n\t\trelatedPosts: allMdx(\n\t\t\tfilter: {\n\t\t\t\tfrontmatter: { tags: { in: [$primaryTag] }, title: { ne: $title } }\n\t\t\t\tfields: { locale: { eq: $locale } }\n\t\t\t}\n\t\t\tlimit: 2\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\ttags\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tfluid {\n\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp_tracedSVG\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdate\n\t\t\t\t}\n\t\t\t\texcerpt\n\t\t\t\ttimeToRead\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n`;\n","import * as React from 'react';\nimport useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport SubscribeForm from './Subscribe';\nimport styles from './Subscribe.module.scss';\n\nconst SubscribeFooter = () => {\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<>\n\t\t\t<section className={styles.subscribeForm}>\n\t\t\t\t<h3 className={styles.subscribeFormTitle}> {formatMessage('subscribe.title')}</h3>\n\t\t\t\t<p className={styles.subscribeFormDescription}> {formatMessage('subscribe.desc')}</p>\n\t\t\t\t<SubscribeForm />\n\t\t\t</section>\n\t\t</>\n\t);\n};\n\nexport default SubscribeFooter;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postFullHeader\":\"f_m\",\"postFullTags\":\"f_n\",\"postFullMetaDate\":\"f_p\",\"postFullTitle\":\"f_q\",\"postFullCustomExcerpt\":\"f_r\",\"postFullImage\":\"f_s\",\"postFullByline\":\"f_t\",\"postFullBylineContent\":\"f_v\",\"postFullBylineMeta\":\"f_w\",\"bull\":\"f_x\",\"kgCodeCard\":\"f_y\"};","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __extends, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\n\nvar FormattedMessage =\n/** @class */\nfunction (_super) {\n  __extends(FormattedMessage, _super);\n\n  function FormattedMessage() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FormattedMessage.prototype.shouldComponentUpdate = function (nextProps) {\n    var _a = this.props,\n        values = _a.values,\n        otherProps = __rest(_a, [\"values\"]);\n\n    var nextValues = nextProps.values,\n        nextOtherProps = __rest(nextProps, [\"values\"]);\n\n    return !shallowEquals(nextValues, values) || !shallowEquals(otherProps, nextOtherProps);\n  };\n\n  FormattedMessage.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(Context.Consumer, null, function (intl) {\n      invariantIntlContext(intl);\n      var formatMessage = intl.formatMessage,\n          _a = intl.textComponent,\n          Text = _a === void 0 ? React.Fragment : _a;\n      var _b = _this.props,\n          id = _b.id,\n          description = _b.description,\n          defaultMessage = _b.defaultMessage,\n          values = _b.values,\n          children = _b.children,\n          _c = _b.tagName,\n          Component = _c === void 0 ? Text : _c,\n          ignoreTag = _b.ignoreTag;\n      var descriptor = {\n        id: id,\n        description: description,\n        defaultMessage: defaultMessage\n      };\n      var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag\n      });\n\n      if (!Array.isArray(nodes)) {\n        nodes = [nodes];\n      }\n\n      if (typeof children === 'function') {\n        return children(nodes);\n      }\n\n      if (Component) {\n        // Needs to use `createElement()` instead of JSX, otherwise React will\n        // warn about a missing `key` prop with rich-text message formatting.\n        return React.createElement.apply(React, __spreadArray([Component, null], nodes));\n      }\n\n      return nodes;\n    });\n  };\n\n  FormattedMessage.displayName = 'FormattedMessage';\n  return FormattedMessage;\n}(React.Component);\n\nexport default FormattedMessage;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import * as React from 'react';\nimport LocalizedLink from './localizedLink';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\n\nconst isHash = (str: string) => /^#/.test(str);\nconst isInternal = (to: string) => /^\\/(?!\\/)/.test(to);\nconst isStatic = (to: string) => /^\\/static/.test(to);\n\n// Only use <LocalizedLink /> for internal links\nconst MdxLink = ({ href, ...props }) =>\n\tisHash(href) || isInternal(href) ? (\n\t\t<a href={href} {...props} />\n\t) : !isInternal(href) || isStatic(href) ? (\n\t\t<a href={href} target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n\t) : (\n\t\t<LocalizedLink {...props} to={href} />\n\t);\n\nexport default MdxLink;\n","/* eslint-disable react/display-name */\nimport * as React from 'react';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { MDXProvider } from '@mdx-js/react';\nimport MdxLink from '~src/i18n/components/mdxLink';\nimport styles from './MarkdownContent.module.scss';\n\n// Provide custom components for markdown elements\nconst components = {\n\ta: MdxLink,\n\t//h1: props => <h1 style={{ color: 'tomato' }} {...props} />,\n\t//Demo: () => <h1>This is a demo component</h1>,\n};\nexport const MarkdownContent: React.FC<{ body: string }> = ({ body }) => {\n\treturn (\n\t\t<section className={styles.postFullContent}>\n\t\t\t<div className={styles.postContent}>\n\t\t\t\t<MDXProvider components={components}>\n\t\t\t\t\t<MDXRenderer>{body}</MDXRenderer>\n\t\t\t\t</MDXProvider>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"y_h\",\"postCardImageLink\":\"y_bV\",\"postCardImage\":\"y_K\",\"postCardContentLink\":\"y_bW\",\"postCardHeader\":\"y_bX\",\"noImage\":\"y_bk\",\"postCardPrimaryTag\":\"y_H\",\"postCardTitle\":\"y_J\",\"postCardContent\":\"y_bY\",\"postCardExcerpt\":\"y_L\",\"postCardMeta\":\"y_bZ\",\"postCardBylineContent\":\"y_M\",\"postCardBylineDate\":\"y_b0\",\"bull\":\"y_x\",\"postCardLarge\":\"y_b1\"};"],"sourceRoot":""}