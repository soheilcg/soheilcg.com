{"version":3,"sources":["webpack:///./src/components/Sections/Blog/Blog.module.scss","webpack:///./src/assets/images/header-cover.jpg","webpack:///./src/pages/index.module.scss","webpack:///./src/components/Sections/Blog/BlogCard.tsx","webpack:///./src/components/Sections/Blog/Blog.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Sections/Blog/BlogCard.module.scss","webpack:///./src/components/Sections/Artworks/ArtworkCard.module.scss","webpack:///./src/components/Sections/Filmography/FilmsCard.module.scss","webpack:///./src/components/Sections/Artworks/ArtworkCard.tsx","webpack:///./src/components/Sections/Artworks/Artworks.tsx","webpack:///./src/components/Sections/Artworks/Artworks.module.scss","webpack:///./src/components/Sections/Filmography/FilmsCard.tsx","webpack:///./src/components/Sections/Filmography/FilmsFeed.tsx","webpack:///./src/components/Sections/Filmography/FilmsFeed.module.scss"],"names":["module","exports","options","year","month","day","BlogCard","post","i","isHome","intl","useIntlHelper","isFeatured","frontmatter","featured","className","styles","postCard","postCardLarge","Link","postCardImageLink","to","category","fields","slug","ImgSharp","postCardImage","alt","title","fluid","image","childImageSharp","postCardContent","postCardContentLink","postCardHeader","postCardPrimaryTag","undefined","tags","formatMessage","id","postCardTitle","postCardExcerpt","desc","excerpt","postCardMeta","postCardBylineContent","postCardBylineDate","dateTime","date","formatDate","BlogFeed","blog","posts","postFeed","nodes","map","key","readMore","IndexHero","site","description","logo","siteLogo","HeaderBackground","srcImg","indexCover","Navigation","src","IndexPage","data","stickyRef","React","Layout","template","header","ref","style","paddingTop","Artworks","artworks","FilmsFeed","films","ArtworkCard","ArtworksFeed","FilmsCard"],"mappings":"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","file":"component---src-pages-index-tsx-219ca49d36be921ef250.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"l_B\",\"postFeed\":\"l_C\",\"readMore\":\"l_D\"};","module.exports = __webpack_public_path__ + \"static/header-cover-d2249c7e5ad3ac483e3946f6cf65ef97.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteLogo\":\"c_j\",\"siteLogoSVG\":\"c_k\"};","import * as React from 'react';\n//import { Index_posts_nodes as Post } from '~src/pages/__generated__/Index';\nimport Link from '~src/i18n/components/Link';\nimport ImgSharp from '~src/components/utils/ImgSharp/ImgSharp';\nimport styles from './BlogCard.module.scss';\nimport useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport { Index_blog_nodes } from '~src/pages/__generated__/Index';\n\nconst options = {\n\tyear: 'numeric',\n\tmonth: 'short',\n\tday: 'numeric',\n};\n\nexport const BlogCard: React.FC<{\n\tpost: Index_blog_nodes;\n\ti?: number;\n\tisHome?: boolean;\n}> = ({ post, i, isHome }) => {\n\tconst { intl } = useIntlHelper();\n\tconst isFeatured = post.frontmatter.featured;\n\treturn (\n\t\t<article className={styles.postCard + ` ` + ((isHome && isFeatured && 0 === i % 6 && styles.postCardLarge) || ``)}>\n\t\t\t<Link className={styles.postCardImageLink} to={`/${post.frontmatter.category}/${post.fields.slug}`}>\n\t\t\t\t<ImgSharp\n\t\t\t\t\tclassName={styles.postCardImage}\n\t\t\t\t\talt={post.frontmatter.title}\n\t\t\t\t\t/* \tsizes=\"(max-width: 1000px) 400px, 700px\" */\n\t\t\t\t\tfluid={post.frontmatter.image.childImageSharp.fluid}\n\t\t\t\t/>\n\t\t\t</Link>\n\t\t\t<div className={styles.postCardContent}>\n\t\t\t\t<Link className={styles.postCardContentLink} to={`/${post.frontmatter.category}/${post.fields.slug}`}>\n\t\t\t\t\t<header className={styles.postCardHeader}>\n\t\t\t\t\t\t<div className={styles.postCardPrimaryTag}>\n\t\t\t\t\t\t\t{post.frontmatter.tags[0] !== undefined &&\n\t\t\t\t\t\t\t\tintl.formatMessage({\n\t\t\t\t\t\t\t\t\tid: `tags.${post.frontmatter.tags[0]}.title`,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h2 className={styles.postCardTitle}>{post.frontmatter.title}</h2>\n\t\t\t\t\t</header>\n\t\t\t\t\t<section className={styles.postCardExcerpt}>\n\t\t\t\t\t\t<p>{post.frontmatter.desc ? post.frontmatter.desc : post.excerpt}</p>\n\t\t\t\t\t</section>\n\t\t\t\t</Link>\n\t\t\t\t<footer className={styles.postCardMeta}>\n\t\t\t\t\t<div className={styles.postCardBylineContent}>\n\t\t\t\t\t\t<span className={styles.postCardBylineDate}>\n\t\t\t\t\t\t\t<time dateTime={post.frontmatter.date}>{intl.formatDate(post.frontmatter.date, options)}</time>{' '}\n\t\t\t\t\t\t\t{/* \t<span className=\"bull\">â€¢</span> {intl.formatNumber(post.timeToRead)}{' '}\n\t\t\t\t\t\t\t{intl.formatMessage({ id: 'posts.timeToRead' })} */}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n","import * as React from 'react';\nimport { BlogCard } from './BlogCard';\nimport Link from '~src/i18n/components/Link';\nimport useIntlHelper from '~src/i18n/helpers/useIntlHelper';\n//import { graphql, useStaticQuery } from 'gatsby';\nimport { Index_blog_nodes, Index_blog } from '~src/pages/__generated__/Index';\nimport styles from './Blog.module.scss';\n\nexport const BlogFeed: React.FC<{ blog: Index_blog; isHome?: boolean }> = ({ blog, isHome }) => {\n\t//const data = useStaticQuery(QUERY);\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<div className=\"inner\">\n\t\t\t<div className={styles.posts}>\n\t\t\t\t<div className={styles.postFeed}>\n\t\t\t\t\t{(blog.nodes as Index_blog_nodes[]).map((post: Index_blog_nodes, i: number) => {\n\t\t\t\t\t\treturn <BlogCard post={post} i={i} key={i} isHome={isHome} />;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{isHome ? (\n\t\t\t\t<Link to=\"/blog\">\n\t\t\t\t\t<h3 className={styles.readMore}> {isHome ? formatMessage('general.readMore') : null}</h3>\n\t\t\t\t</Link>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '~src/components/Layout/Layout';\nimport { Index as IndexData } from '~src/pages/__generated__/Index';\nimport { Navigation } from '~src/components/Layout/Navigation/Navigation';\nimport HeaderBackground from '~src/components/Layout/Header/HeaderBackground';\nimport Link from '~src/i18n/components/Link';\n//import { PostFeed } from '~src/components/Sections/PostFeed/PostFeed';\nimport useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport siteLogo from '~src/assets/images/soheil-logo.png';\nimport indexCover from '~src/assets/images/header-cover.jpg';\nimport { ArtworksFeed } from '~src/components/Sections/Artworks/Artworks';\nimport styles from './index.module.scss';\nimport { BlogFeed } from '~src/components/Sections/Blog/Blog';\nimport { FilmsFeed } from '~src/components/Sections/Filmography/FilmsFeed';\nimport { TutorialsFeed } from '~src/components/Sections/Tutorials/Tutorials';\n\n//import { ArtworksFeed } from '../Sections/Artworks/Artworks';\nconst IndexHero = () => {\n\tconst { formatMessage } = useIntlHelper();\n\tconst site = {\n\t\ttitle: 'meta.title',\n\t\tdescription: 'meta.desc',\n\t\tlogo: siteLogo,\n\t};\n\treturn (\n\t\t<HeaderBackground\n\t\t\t//fluidImg={data.indexCover.childImageSharp.fluid}\n\t\t\t//fixedImg={data.indexCover.childImageSharp.fixed}\n\t\t\tsrcImg={indexCover}>\n\t\t\t<div className=\"inner\">\n\t\t\t\t<Navigation className=\"site-nav\" isHome={true} />\n\t\t\t\t<div className=\"site-header-content\">\n\t\t\t\t\t<h1 className=\"site-title\">\n\t\t\t\t\t\t{site.logo ? (\n\t\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t\t<img className={styles.siteLogo} src={site.logo} alt={formatMessage(site.title)} />\n\t\t\t\t\t\t\t\t{/* \t\t\t<div className={styles.siteLogoSVG}>\n\t\t\t\t\t\t\t\t\t\t\t<Logo />\n\t\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Link to=\"/\">{formatMessage(site.title)}</Link>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</h1>\n\t\t\t\t\t<h2 className=\"site-description\">\n\t\t\t\t\t\t{formatMessage(site.title)}\n\t\t\t\t\t\t{` | `}\n\t\t\t\t\t\t{formatMessage(site.description)}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</HeaderBackground>\n\t);\n};\nconst IndexPage: React.FC<{ data: IndexData }> = ({ data }) => {\n\tconst stickyRef: React.RefObject<HTMLDivElement> = React.useRef(null);\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<Layout template=\"home\" stickyRef={stickyRef} header={<IndexHero />}>\n\t\t\t<div className=\"inner\" ref={stickyRef}>\n\t\t\t\t<h1 style={{ paddingTop: '20px' }}> {formatMessage('navigation.artworks')}</h1>\n\t\t\t\t<ArtworksFeed artworks={data.artworks} isHome={true} />\n\t\t\t\t<h1> {formatMessage('navigation.films')}</h1>\n\t\t\t\t<FilmsFeed films={data.films} isHome={true} />\n\t\t\t\t<h1> {formatMessage('navigation.blog')}</h1>\n\t\t\t\t<BlogFeed blog={data.blog} isHome={true} />\n\t\t\t\t{/*\t\t<h1> {formatMessage('navigation.tutorials')}</h1>\n\t\t\t \t\t<TutorialsFeed tutorials={data.tutorials} /> */}\n\t\t\t\t{/* \t<PostFeed data={data} isHome /> */}\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default IndexPage;\nexport const indexQuery = graphql`\n\tquery Index($locale: String!) {\n\t\tartworks: allMdx(\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t\tlimit: 6\n\t\t\tfilter: { fields: { locale: { eq: $locale } }, frontmatter: { category: { eq: \"artworks\" } } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\tdate(formatString: \"DD MMMM YYYY\")\n\t\t\t\t\ttitle\n\n\t\t\t\t\tcategory\n\t\t\t\t\tfeatured\n\t\t\t\t\ttags\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tfluid(maxWidth: 700) {\n\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp_tracedSVG\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texcerpt(truncate: true, pruneLength: 200)\n\t\t\t\ttimeToRead\n\t\t\t}\n\t\t}\n\t\tfilms: allMdx(\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t\tlimit: 6\n\t\t\tfilter: { fields: { locale: { eq: $locale } }, frontmatter: { category: { eq: \"filmography\" } } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\tdate(formatString: \"DD MMMM YYYY\")\n\t\t\t\t\ttitle\n\t\t\t\t\tcategory\n\t\t\t\t\tfeatured\n\t\t\t\t\ttags\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tfluid(maxWidth: 700) {\n\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp_tracedSVG\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texcerpt(truncate: true, pruneLength: 200)\n\t\t\t\ttimeToRead\n\t\t\t}\n\t\t}\n\t\tblog: allMdx(\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t\tlimit: 4\n\t\t\tfilter: { fields: { locale: { eq: $locale } }, frontmatter: { category: { eq: \"blog\" } } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\tdate(formatString: \"DD MMMM YYYY\")\n\t\t\t\t\ttitle\n\t\t\t\t\tdesc\n\t\t\t\t\tcategory\n\t\t\t\t\tfeatured\n\t\t\t\t\ttags\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tfluid(maxWidth: 700) {\n\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp_tracedSVG\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texcerpt(truncate: true, pruneLength: 200)\n\t\t\t\ttimeToRead\n\t\t\t}\n\t\t}\n\t\ttutorials: allMdx(\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t\tlimit: 4\n\t\t\tfilter: { fields: { locale: { eq: $locale } }, frontmatter: { category: { eq: \"tutorials\" } } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\tdate(formatString: \"DD MMMM YYYY\")\n\t\t\t\t\ttitle\n\t\t\t\t\tcategory\n\t\t\t\t\tfeatured\n\t\t\t\t\ttags\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tfluid(maxWidth: 700) {\n\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp_tracedSVG\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texcerpt(truncate: true, pruneLength: 200)\n\t\t\t\ttimeToRead\n\t\t\t}\n\t\t}\n\t}\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"w_h\",\"postCardImageLink\":\"w_bV\",\"postCardImage\":\"w_K\",\"postCardContentLink\":\"w_bW\",\"postCardHeader\":\"w_bX\",\"noImage\":\"w_bk\",\"postCardPrimaryTag\":\"w_H\",\"postCardTitle\":\"w_J\",\"postCardContent\":\"w_bY\",\"postCardExcerpt\":\"w_L\",\"postCardMeta\":\"w_bZ\",\"postCardBylineContent\":\"w_M\",\"postCardBylineDate\":\"w_b0\",\"bull\":\"w_x\",\"postCardLarge\":\"w_b1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"t_h\",\"postCardImageLink\":\"t_bV\",\"postCardImage\":\"t_K\",\"postCardContentLink\":\"t_bW\",\"postCardHeader\":\"t_bX\",\"noImage\":\"t_bk\",\"postCardPrimaryTag\":\"t_H\",\"postCardTitle\":\"t_J\",\"postCardContent\":\"t_bY\",\"postCardExcerpt\":\"t_L\",\"postCardMeta\":\"t_bZ\",\"postCardBylineContent\":\"t_M\",\"postCardBylineDate\":\"t_b0\",\"bull\":\"t_x\",\"postCardLarge\":\"t_b1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"v_h\",\"postCardImageLink\":\"v_bV\",\"postCardImage\":\"v_K\",\"postCardContentLink\":\"v_bW\",\"postCardHeader\":\"v_bX\",\"noImage\":\"v_bk\",\"postCardPrimaryTag\":\"v_H\",\"postCardTitle\":\"v_J\",\"postCardContent\":\"v_bY\",\"postCardExcerpt\":\"v_L\",\"postCardMeta\":\"v_bZ\",\"postCardBylineContent\":\"v_M\",\"postCardBylineDate\":\"v_b0\",\"bull\":\"v_x\",\"postCardLarge\":\"v_b1\"};","import * as React from 'react';\n//import { Index_posts_nodes as Post } from '~src/pages/__generated__/Index';\nimport Link from '~src/i18n/components/Link';\nimport ImgSharp from '~src/components/utils/ImgSharp/ImgSharp';\nimport styles from './ArtworkCard.module.scss';\n//import useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport { Index_artworks_nodes } from '~src/pages/__generated__/Index';\n\n/* const options = {\n\tyear: 'numeric',\n\tmonth: 'short',\n\tday: 'numeric',\n}; */\n\nexport const ArtworkCard: React.FC<{\n\tpost: Index_artworks_nodes;\n\ti?: number;\n\tisHome?: boolean;\n}> = ({ post, i, isHome }) => {\n\t//const { intl } = useIntlHelper();\n\tconst isFeatured = post.frontmatter.featured;\n\treturn (\n\t\t<article className={styles.postCard + ` ` + ((isHome && isFeatured && 0 === i % 6 && styles.postCardLarge) || ``)}>\n\t\t\t<Link className={styles.postCardImageLink} to={`/${post.frontmatter.category}/${post.fields.slug}`}>\n\t\t\t\t<ImgSharp\n\t\t\t\t\tclassName={styles.postCardImage}\n\t\t\t\t\talt={post.frontmatter.title}\n\t\t\t\t\t/* \tsizes=\"(max-width: 1000px) 400px, 700px\" */\n\t\t\t\t\tfluid={post.frontmatter.image.childImageSharp.fluid}\n\t\t\t\t/>\n\t\t\t</Link>\n\t\t\t<div className={styles.postCardContent}>\n\t\t\t\t<Link className={styles.postCardContentLink} to={`/${post.frontmatter.category}/${post.fields.slug}`}>\n\t\t\t\t\t<header className={styles.postCardHeader}>\n\t\t\t\t\t\t{/* \t\t\t\t\t\t<div className={styles.postCardPrimaryTag}>\n\t\t\t\t\t\t\t{post.frontmatter.tags[0] !== undefined &&\n\t\t\t\t\t\t\t\tintl.formatMessage({\n\t\t\t\t\t\t\t\t\tid: `tags.${post.frontmatter.tags[0]}.title`,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<h2 className={styles.postCardTitle}>{post.frontmatter.title}</h2>\n\t\t\t\t\t</header>\n\t\t\t\t\t{/* \t\t\t\t\t<section className={styles.postCardExcerpt}>\n\t\t\t\t\t\t<p>{post.excerpt}</p>\n\t\t\t\t\t</section> */}\n\t\t\t\t</Link>\n\t\t\t\t{/* \t\t\t\t<footer className={styles.postCardMeta}>\n\t\t\t\t\t<div className={styles.postCardBylineContent}>\n\t\t\t\t\t\t<span className={styles.postCardBylineDate}>\n\t\t\t\t\t\t\t<time dateTime={post.frontmatter.date}>{intl.formatDate(post.frontmatter.date, options)}</time>{' '}\n\t\t\t\t\t\t\t<span className=\"bull\">â€¢</span> {intl.formatNumber(post.timeToRead)}{' '}\n\t\t\t\t\t\t\t{intl.formatMessage({ id: 'posts.timeToRead' })}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</footer> */}\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n","import * as React from 'react';\nimport styles from './Artworks.module.scss';\n//import { graphql, useStaticQuery } from 'gatsby';\nimport { Index_artworks, Index_artworks_nodes } from '~src/pages/__generated__/Index';\nimport useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport Link from '~src/i18n/components/Link';\nimport { ArtworkCard } from './ArtworkCard';\nexport const ArtworksFeed: React.FC<{ artworks: Index_artworks; isHome?: boolean }> = ({ artworks, isHome }) => {\n\t//const data = useStaticQuery(QUERY);\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<div className=\"inner\">\n\t\t\t<div className={styles.posts}>\n\t\t\t\t<div className={styles.postFeed}>\n\t\t\t\t\t{(artworks.nodes as Index_artworks_nodes[]).map((post: Index_artworks_nodes, i: number) => {\n\t\t\t\t\t\treturn <ArtworkCard post={post} i={i} key={i} isHome={isHome} />;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{isHome ? (\n\t\t\t\t<Link to=\"/artworks\">\n\t\t\t\t\t<h3 className={styles.readMore}> {isHome ? formatMessage('general.readMore') : null}</h3>\n\t\t\t\t</Link>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"k_B\",\"postFeed\":\"k_C\",\"readMore\":\"k_D\"};","import * as React from 'react';\n//import { Index_posts_nodes as Post } from '~src/pages/__generated__/Index';\nimport Link from '~src/i18n/components/Link';\nimport ImgSharp from '~src/components/utils/ImgSharp/ImgSharp';\nimport styles from './FilmsCard.module.scss';\n//import useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport { Index_artworks_nodes } from '~src/pages/__generated__/Index';\n\n/* const options = {\n\tyear: 'numeric',\n\tmonth: 'short',\n\tday: 'numeric',\n}; */\n\nexport const FilmsCard: React.FC<{\n\tpost: Index_artworks_nodes;\n\ti?: number;\n\tisHome?: boolean;\n}> = ({ post, i, isHome }) => {\n\t//const { intl } = useIntlHelper();\n\tconst isFeatured = post.frontmatter.featured;\n\treturn (\n\t\t<article className={styles.postCard + ` ` + ((isHome && isFeatured && 0 === i % 6 && styles.postCardLarge) || ``)}>\n\t\t\t<Link className={styles.postCardImageLink} to={`/${post.frontmatter.category}/${post.fields.slug}`}>\n\t\t\t\t<ImgSharp\n\t\t\t\t\tclassName={styles.postCardImage}\n\t\t\t\t\talt={post.frontmatter.title}\n\t\t\t\t\t/* \tsizes=\"(max-width: 1000px) 400px, 700px\" */\n\t\t\t\t\tfluid={post.frontmatter.image.childImageSharp.fluid}\n\t\t\t\t/>\n\t\t\t</Link>\n\t\t\t<div className={styles.postCardContent}>\n\t\t\t\t<Link className={styles.postCardContentLink} to={`/${post.frontmatter.category}/${post.fields.slug}`}>\n\t\t\t\t\t<header className={styles.postCardHeader}>\n\t\t\t\t\t\t{/* \t\t\t\t\t\t<div className={styles.postCardPrimaryTag}>\n\t\t\t\t\t\t\t{post.frontmatter.tags[0] !== undefined &&\n\t\t\t\t\t\t\t\tintl.formatMessage({\n\t\t\t\t\t\t\t\t\tid: `tags.${post.frontmatter.tags[0]}.title`,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<h2 className={styles.postCardTitle}>{post.frontmatter.title}</h2>\n\t\t\t\t\t</header>\n\t\t\t\t\t{/* \t\t\t\t\t<section className={styles.postCardExcerpt}>\n\t\t\t\t\t\t<p>{post.excerpt}</p>\n\t\t\t\t\t</section> */}\n\t\t\t\t</Link>\n\t\t\t\t{/* \t\t\t\t<footer className={styles.postCardMeta}>\n\t\t\t\t\t<div className={styles.postCardBylineContent}>\n\t\t\t\t\t\t<span className={styles.postCardBylineDate}>\n\t\t\t\t\t\t\t<time dateTime={post.frontmatter.date}>{intl.formatDate(post.frontmatter.date, options)}</time>{' '}\n\t\t\t\t\t\t\t<span className=\"bull\">â€¢</span> {intl.formatNumber(post.timeToRead)}{' '}\n\t\t\t\t\t\t\t{intl.formatMessage({ id: 'posts.timeToRead' })}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</footer> */}\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n","import * as React from 'react';\nimport styles from './FilmsFeed.module.scss';\n//import { graphql, useStaticQuery } from 'gatsby';\nimport { Index_films, Index_artworks_nodes } from '~src/pages/__generated__/Index';\nimport Link from '~src/i18n/components/Link';\nimport useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport { FilmsCard } from './FilmsCard';\nexport const FilmsFeed: React.FC<{ films: Index_films; isHome?: boolean }> = ({ films, isHome }) => {\n\t//const data = useStaticQuery(QUERY);\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<div className=\"inner\">\n\t\t\t<div className={styles.posts}>\n\t\t\t\t<div className={styles.postFeed}>\n\t\t\t\t\t{(films.nodes as Index_artworks_nodes[]).map((post: Index_artworks_nodes, i: number) => {\n\t\t\t\t\t\treturn <FilmsCard post={post} i={i} key={i} isHome={isHome} />;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{isHome ? (\n\t\t\t\t<Link to=\"/filmography\">\n\t\t\t\t\t<h3 className={styles.readMore}> {isHome ? formatMessage('general.readMore') : null}</h3>\n\t\t\t\t</Link>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"j_B\",\"postFeed\":\"j_C\",\"readMore\":\"j_D\"};"],"sourceRoot":""}