{"version":3,"sources":["webpack:///./src/pages/header.module.scss","webpack:///./src/components/Sections/Artworks/ArtworkCard.module.scss","webpack:///./src/components/Sections/Artworks/ArtworkCard.tsx","webpack:///./src/components/Sections/Artworks/Artworks.tsx","webpack:///./src/pages/artworks.tsx","webpack:///./src/components/Sections/Artworks/Artworks.module.scss"],"names":["module","exports","ArtworkCard","post","i","isHome","isFeatured","frontmatter","featured","className","styles","postCard","postCardLarge","Link","postCardImageLink","to","category","fields","slug","ImgSharp","postCardImage","alt","title","fluid","image","childImageSharp","postCardContent","postCardContentLink","postCardHeader","postCardTitle","ArtworksFeed","artworks","formatMessage","useIntlHelper","posts","postFeed","nodes","map","key","readMore","ArtworksPage","data","pageHeader"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,WAAa,Q,qBCA/BD,EAAOC,QAAU,CAAC,SAAW,MAAM,kBAAoB,OAAO,cAAgB,MAAM,oBAAsB,OAAO,eAAiB,OAAO,QAAU,OAAO,mBAAqB,MAAM,cAAgB,MAAM,gBAAkB,OAAO,gBAAkB,MAAM,aAAe,OAAO,sBAAwB,MAAM,mBAAqB,OAAO,KAAO,MAAM,cAAgB,S,kKCa5VC,EAIR,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,EAAGC,EAAa,EAAbA,OAEVC,EAAaH,EAAKI,YAAYC,SACpC,OACC,2BAASC,UAAWC,IAAOC,SAAP,KAA0BN,GAAUC,GAAc,GAAMF,EAAI,GAAKM,IAAOE,eAA/C,KAC5C,gBAACC,EAAA,EAAD,CAAMJ,UAAWC,IAAOI,kBAAmBC,GAAE,IAAMZ,EAAKI,YAAYS,SAAvB,IAAmCb,EAAKc,OAAOC,MAC3F,gBAACC,EAAA,EAAD,CACCV,UAAWC,IAAOU,cAClBC,IAAKlB,EAAKI,YAAYe,MAEtBC,MAAOpB,EAAKI,YAAYiB,MAAMC,gBAAgBF,SAGhD,uBAAKd,UAAWC,IAAOgB,iBACtB,gBAACb,EAAA,EAAD,CAAMJ,UAAWC,IAAOiB,oBAAqBZ,GAAE,IAAMZ,EAAKI,YAAYS,SAAvB,IAAmCb,EAAKc,OAAOC,MAC7F,0BAAQT,UAAWC,IAAOkB,gBAOzB,sBAAInB,UAAWC,IAAOmB,eAAgB1B,EAAKI,YAAYe,YCjChDQ,EAAyE,SAAC,GAAyB,IAAvBC,EAAuB,EAAvBA,SAAU1B,EAAa,EAAbA,OAE1F2B,EAAkBC,cAAlBD,cACR,OACC,uBAAKvB,UAAU,SACd,uBAAKA,UAAWC,IAAOwB,OACtB,uBAAKzB,UAAWC,IAAOyB,UACpBJ,EAASK,MAAiCC,KAAI,SAAClC,EAA4BC,GAC5E,OAAO,gBAAC,EAAD,CAAaD,KAAMA,EAAMC,EAAGA,EAAGkC,IAAKlC,EAAGC,OAAQA,SAIxDA,EACA,gBAACQ,EAAA,EAAD,CAAME,GAAG,aACR,sBAAIN,UAAWC,IAAO6B,UAAtB,IAAkClC,EAAS2B,EAAc,oBAAsB,OAE7E,Q,kCCvBP,gFAuBeQ,UAdoC,SAAC,GAAa,IAAXC,EAAW,EAAXA,KAC7CT,EAAkBC,cAAlBD,cACR,OACC,gBAAC,IAAD,CAAQS,KAAMA,GACb,uBAAKhC,UAAU,SACd,0BAAQA,UAAWC,IAAOgC,YACzB,sBAAIjC,UAAU,wBAAwBuB,EAAc,yBAErD,gBAAC,IAAD,CAAcD,SAAUU,EAAKP,MAAO7B,QAAQ,Q,qBChBhDL,EAAOC,QAAU,CAAC,MAAQ,MAAM,SAAW,MAAM,SAAW","file":"component---src-pages-artworks-tsx-460327f88a7939b8a811.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"d_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"t_h\",\"postCardImageLink\":\"t_bV\",\"postCardImage\":\"t_K\",\"postCardContentLink\":\"t_bW\",\"postCardHeader\":\"t_bX\",\"noImage\":\"t_bk\",\"postCardPrimaryTag\":\"t_H\",\"postCardTitle\":\"t_J\",\"postCardContent\":\"t_bY\",\"postCardExcerpt\":\"t_L\",\"postCardMeta\":\"t_bZ\",\"postCardBylineContent\":\"t_M\",\"postCardBylineDate\":\"t_b0\",\"bull\":\"t_x\",\"postCardLarge\":\"t_b1\"};","import * as React from 'react';\n//import { Index_posts_nodes as Post } from '~src/pages/__generated__/Index';\nimport Link from '~src/i18n/components/Link';\nimport ImgSharp from '~src/components/utils/ImgSharp/ImgSharp';\nimport styles from './ArtworkCard.module.scss';\n//import useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport { Index_artworks_nodes } from '~src/pages/__generated__/Index';\n\n/* const options = {\n\tyear: 'numeric',\n\tmonth: 'short',\n\tday: 'numeric',\n}; */\n\nexport const ArtworkCard: React.FC<{\n\tpost: Index_artworks_nodes;\n\ti?: number;\n\tisHome?: boolean;\n}> = ({ post, i, isHome }) => {\n\t//const { intl } = useIntlHelper();\n\tconst isFeatured = post.frontmatter.featured;\n\treturn (\n\t\t<article className={styles.postCard + ` ` + ((isHome && isFeatured && 0 === i % 6 && styles.postCardLarge) || ``)}>\n\t\t\t<Link className={styles.postCardImageLink} to={`/${post.frontmatter.category}/${post.fields.slug}`}>\n\t\t\t\t<ImgSharp\n\t\t\t\t\tclassName={styles.postCardImage}\n\t\t\t\t\talt={post.frontmatter.title}\n\t\t\t\t\t/* \tsizes=\"(max-width: 1000px) 400px, 700px\" */\n\t\t\t\t\tfluid={post.frontmatter.image.childImageSharp.fluid}\n\t\t\t\t/>\n\t\t\t</Link>\n\t\t\t<div className={styles.postCardContent}>\n\t\t\t\t<Link className={styles.postCardContentLink} to={`/${post.frontmatter.category}/${post.fields.slug}`}>\n\t\t\t\t\t<header className={styles.postCardHeader}>\n\t\t\t\t\t\t{/* \t\t\t\t\t\t<div className={styles.postCardPrimaryTag}>\n\t\t\t\t\t\t\t{post.frontmatter.tags[0] !== undefined &&\n\t\t\t\t\t\t\t\tintl.formatMessage({\n\t\t\t\t\t\t\t\t\tid: `tags.${post.frontmatter.tags[0]}.title`,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<h2 className={styles.postCardTitle}>{post.frontmatter.title}</h2>\n\t\t\t\t\t</header>\n\t\t\t\t\t{/* \t\t\t\t\t<section className={styles.postCardExcerpt}>\n\t\t\t\t\t\t<p>{post.excerpt}</p>\n\t\t\t\t\t</section> */}\n\t\t\t\t</Link>\n\t\t\t\t{/* \t\t\t\t<footer className={styles.postCardMeta}>\n\t\t\t\t\t<div className={styles.postCardBylineContent}>\n\t\t\t\t\t\t<span className={styles.postCardBylineDate}>\n\t\t\t\t\t\t\t<time dateTime={post.frontmatter.date}>{intl.formatDate(post.frontmatter.date, options)}</time>{' '}\n\t\t\t\t\t\t\t<span className=\"bull\">â€¢</span> {intl.formatNumber(post.timeToRead)}{' '}\n\t\t\t\t\t\t\t{intl.formatMessage({ id: 'posts.timeToRead' })}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</footer> */}\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n","import * as React from 'react';\nimport styles from './Artworks.module.scss';\n//import { graphql, useStaticQuery } from 'gatsby';\nimport { Index_artworks, Index_artworks_nodes } from '~src/pages/__generated__/Index';\nimport useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport Link from '~src/i18n/components/Link';\nimport { ArtworkCard } from './ArtworkCard';\nexport const ArtworksFeed: React.FC<{ artworks: Index_artworks; isHome?: boolean }> = ({ artworks, isHome }) => {\n\t//const data = useStaticQuery(QUERY);\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<div className=\"inner\">\n\t\t\t<div className={styles.posts}>\n\t\t\t\t<div className={styles.postFeed}>\n\t\t\t\t\t{(artworks.nodes as Index_artworks_nodes[]).map((post: Index_artworks_nodes, i: number) => {\n\t\t\t\t\t\treturn <ArtworkCard post={post} i={i} key={i} isHome={isHome} />;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{isHome ? (\n\t\t\t\t<Link to=\"/artworks\">\n\t\t\t\t\t<h3 className={styles.readMore}> {isHome ? formatMessage('general.readMore') : null}</h3>\n\t\t\t\t</Link>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '~src/components/Layout/Layout';\n\nimport { Artworks } from '~src/pages/__generated__/Artworks';\nimport useIntlHelper from '~src/i18n/helpers/useIntlHelper';\nimport styles from './header.module.scss';\nimport { ArtworksFeed } from '~src/components/Sections/Artworks/Artworks';\n\nconst ArtworksPage: React.FC<{ data: Artworks }> = ({ data }) => {\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<Layout data={data}>\n\t\t\t<div className=\"inner\">\n\t\t\t\t<header className={styles.pageHeader}>\n\t\t\t\t\t<h1 className=\"site-title  no-image\">{formatMessage('navigation.artworks')}</h1>\n\t\t\t\t</header>\n\t\t\t\t<ArtworksFeed artworks={data.posts} isHome={false} />\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default ArtworksPage;\nexport const artworksQuery = graphql`\n\tquery ArtworksPage($locale: String!) {\n\t\tposts: allMdx(\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t\tlimit: 20\n\t\t\tfilter: { fields: { locale: { eq: $locale } }, frontmatter: { category: { eq: \"artworks\" } } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\tdate(formatString: \"DD MMMM YYYY\")\n\t\t\t\t\ttitle\n\t\t\t\t\tcategory\n\t\t\t\t\tfeatured\n\t\t\t\t\ttags\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tfluid(maxWidth: 700) {\n\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp_tracedSVG\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texcerpt(truncate: true, pruneLength: 200)\n\t\t\t\ttimeToRead\n\t\t\t}\n\t\t}\n\t}\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"k_B\",\"postFeed\":\"k_C\",\"readMore\":\"k_D\"};"],"sourceRoot":""}